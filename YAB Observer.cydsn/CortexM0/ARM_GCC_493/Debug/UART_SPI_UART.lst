ARM GAS  C:\Users\YBOURA~1\AppData\Local\Temp\ccATHWVo.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"UART_SPI_UART.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.UART_SpiUartReadRxData,"ax",%progbits
  18              		.align	2
  19              		.global	UART_SpiUartReadRxData
  20              		.code	16
  21              		.thumb_func
  22              		.type	UART_SpiUartReadRxData, %function
  23              	UART_SpiUartReadRxData:
  24              	.LFB2:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\UART_SPI_UART.c"
   1:.\Generated_Source\PSoC4/UART_SPI_UART.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * File Name: UART_SPI_UART.c
   3:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Version 3.0
   4:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
   5:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Description:
   6:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *  This file provides the source code to the API for the SCB Component in
   7:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *  SPI and UART modes.
   8:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
   9:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Note:
  10:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
  11:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *******************************************************************************
  12:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  18:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #include "UART_PVT.h"
  19:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #include "UART_SPI_UART_PVT.h"
  20:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  21:.\Generated_Source\PSoC4/UART_SPI_UART.c **** /***************************************
  22:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *        SPI/UART Private Vars
  23:.\Generated_Source\PSoC4/UART_SPI_UART.c **** ***************************************/
  24:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  25:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_INTERNAL_RX_SW_BUFFER_CONST)
  26:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint32 UART_rxBufferHead;
  27:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint32 UART_rxBufferTail;
  28:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint8  UART_rxBufferOverflow;
  29:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_INTERNAL_RX_SW_BUFFER_CONST) */
  30:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  31:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_INTERNAL_TX_SW_BUFFER_CONST)
  32:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint32 UART_txBufferHead;
ARM GAS  C:\Users\YBOURA~1\AppData\Local\Temp\ccATHWVo.s 			page 2


  33:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint32 UART_txBufferTail;
  34:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_INTERNAL_TX_SW_BUFFER_CONST) */
  35:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  36:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_INTERNAL_RX_SW_BUFFER)
  37:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /* Add one element to the buffer to receive full packet. One byte in receive buffer is always e
  38:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint8 UART_rxBufferInternal[UART_INTERNAL_RX_BUFFER_SIZE];
  39:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_INTERNAL_RX_SW_BUFFER) */
  40:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  41:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_INTERNAL_TX_SW_BUFFER)
  42:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint8 UART_txBufferInternal[UART_TX_BUFFER_SIZE];
  43:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_INTERNAL_TX_SW_BUFFER) */
  44:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  45:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  46:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_RX_DIRECTION)
  47:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
  48:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartReadRxData
  49:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     ********************************************************************************
  50:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  51:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Summary:
  52:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Retrieves the next data element from the receive buffer.
  53:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - RX software buffer is disabled: Returns data element retrieved from
  54:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *     RX FIFO. Undefined data will be returned if the RX FIFO is empty.
  55:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - RX software buffer is enabled: Returns data element from the software
  56:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *     receive buffer. Zero value is returned if the software receive buffer
  57:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *     is empty.
  58:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  59:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Parameters:
  60:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  None
  61:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  62:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Return:
  63:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Next data element from the receive buffer.
  64:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  65:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Global Variables:
  66:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Look into UART_SpiInit for description.
  67:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  68:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
  69:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 UART_SpiUartReadRxData(void)
  70:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     {
  26              		.loc 1 70 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 7, -8
  31              		.cfi_offset 14, -4
  32 0002 82B0     		sub	sp, sp, #8
  33              		.cfi_def_cfa_offset 16
  34 0004 00AF     		add	r7, sp, #0
  35              		.cfi_def_cfa_register 7
  71:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 rxData = 0u;
  36              		.loc 1 71 0
  37 0006 0023     		mov	r3, #0
  38 0008 7B60     		str	r3, [r7, #4]
  72:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  73:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #if (UART_INTERNAL_RX_SW_BUFFER_CONST)
  74:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 locTail;
  75:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #endif /* (UART_INTERNAL_RX_SW_BUFFER_CONST) */
  76:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
ARM GAS  C:\Users\YBOURA~1\AppData\Local\Temp\ccATHWVo.s 			page 3


  77:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_RX_SW_BUFFER)
  78:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
  79:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             if (UART_rxBufferHead != UART_rxBufferTail)
  80:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
  81:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* There is data in RX software buffer */
  82:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  83:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Calculate index to read from */
  84:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 locTail = (UART_rxBufferTail + 1u);
  85:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  86:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 if (UART_INTERNAL_RX_BUFFER_SIZE == locTail)
  87:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
  88:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     locTail = 0u;
  89:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
  90:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  91:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Get data from RX software buffer */
  92:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 rxData = UART_GetWordFromRxBuffer(locTail);
  93:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  94:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Change index in the buffer */
  95:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_rxBufferTail = locTail;
  96:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  97:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 #if (UART_CHECK_UART_RTS_CONTROL_FLOW)
  98:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
  99:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     /* Check if RX Not Empty is disabled in the interrupt */
 100:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     if (0u == (UART_INTR_RX_MASK_REG & UART_INTR_RX_NOT_EMPTY))
 101:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     {
 102:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                         /* Enable RX Not Empty interrupt source to continue
 103:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                         * receiving data into software buffer.
 104:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                         */
 105:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                         UART_INTR_RX_MASK_REG |= UART_INTR_RX_NOT_EMPTY;
 106:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     }
 107:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 108:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 #endif
 109:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 110:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 111:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 112:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 113:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 114:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Read data from RX FIFO */
 115:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             rxData = UART_RX_FIFO_RD_REG;
  39              		.loc 1 115 0
  40 000a 044B     		ldr	r3, .L3
  41 000c 1B68     		ldr	r3, [r3]
  42 000e 7B60     		str	r3, [r7, #4]
 116:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 117:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 118:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 119:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         return (rxData);
  43              		.loc 1 119 0
  44 0010 7B68     		ldr	r3, [r7, #4]
 120:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     }
  45              		.loc 1 120 0
  46 0012 181C     		mov	r0, r3
  47 0014 BD46     		mov	sp, r7
  48 0016 02B0     		add	sp, sp, #8
  49              		@ sp needed
  50 0018 80BD     		pop	{r7, pc}
  51              	.L4:
ARM GAS  C:\Users\YBOURA~1\AppData\Local\Temp\ccATHWVo.s 			page 4


  52 001a C046     		.align	2
  53              	.L3:
  54 001c 40032440 		.word	1076101952
  55              		.cfi_endproc
  56              	.LFE2:
  57              		.size	UART_SpiUartReadRxData, .-UART_SpiUartReadRxData
  58              		.section	.text.UART_SpiUartGetRxBufferSize,"ax",%progbits
  59              		.align	2
  60              		.global	UART_SpiUartGetRxBufferSize
  61              		.code	16
  62              		.thumb_func
  63              		.type	UART_SpiUartGetRxBufferSize, %function
  64              	UART_SpiUartGetRxBufferSize:
  65              	.LFB3:
 121:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 122:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 123:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 124:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartGetRxBufferSize
 125:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     ********************************************************************************
 126:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 127:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Summary:
 128:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Returns the number of received data elements in the receive buffer.
 129:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - RX software buffer disabled: returns the number of used entries in
 130:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *     RX FIFO.
 131:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - RX software buffer enabled: returns the number of elements which were
 132:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *     placed in the receive buffer. This does not include the hardware RX FIFO.
 133:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 134:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Parameters:
 135:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  None
 136:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 137:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Return:
 138:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Number of received data elements
 139:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 140:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 141:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 UART_SpiUartGetRxBufferSize(void)
 142:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     {
  66              		.loc 1 142 0
  67              		.cfi_startproc
  68 0000 80B5     		push	{r7, lr}
  69              		.cfi_def_cfa_offset 8
  70              		.cfi_offset 7, -8
  71              		.cfi_offset 14, -4
  72 0002 82B0     		sub	sp, sp, #8
  73              		.cfi_def_cfa_offset 16
  74 0004 00AF     		add	r7, sp, #0
  75              		.cfi_def_cfa_register 7
 143:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 size;
 144:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #if (UART_INTERNAL_RX_SW_BUFFER_CONST)
 145:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 locHead;
 146:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #endif /* (UART_INTERNAL_RX_SW_BUFFER_CONST) */
 147:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 148:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_RX_SW_BUFFER)
 149:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 150:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             locHead = UART_rxBufferHead;
 151:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 152:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             if(locHead >= UART_rxBufferTail)
 153:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
ARM GAS  C:\Users\YBOURA~1\AppData\Local\Temp\ccATHWVo.s 			page 5


 154:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 size = (locHead - UART_rxBufferTail);
 155:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 156:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             else
 157:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 158:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 size = (locHead + (UART_INTERNAL_RX_BUFFER_SIZE - UART_rxBufferTail));
 159:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 160:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 161:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 162:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 163:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             size = UART_GET_RX_FIFO_ENTRIES;
  76              		.loc 1 163 0
  77 0006 054B     		ldr	r3, .L7
  78 0008 1B68     		ldr	r3, [r3]
  79 000a 1F22     		mov	r2, #31
  80 000c 1340     		and	r3, r2
  81 000e 7B60     		str	r3, [r7, #4]
 164:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 165:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 166:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 167:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         return (size);
  82              		.loc 1 167 0
  83 0010 7B68     		ldr	r3, [r7, #4]
 168:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     }
  84              		.loc 1 168 0
  85 0012 181C     		mov	r0, r3
  86 0014 BD46     		mov	sp, r7
  87 0016 02B0     		add	sp, sp, #8
  88              		@ sp needed
  89 0018 80BD     		pop	{r7, pc}
  90              	.L8:
  91 001a C046     		.align	2
  92              	.L7:
  93 001c 08032440 		.word	1076101896
  94              		.cfi_endproc
  95              	.LFE3:
  96              		.size	UART_SpiUartGetRxBufferSize, .-UART_SpiUartGetRxBufferSize
  97              		.section	.text.UART_SpiUartClearRxBuffer,"ax",%progbits
  98              		.align	2
  99              		.global	UART_SpiUartClearRxBuffer
 100              		.code	16
 101              		.thumb_func
 102              		.type	UART_SpiUartClearRxBuffer, %function
 103              	UART_SpiUartClearRxBuffer:
 104              	.LFB4:
 169:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 170:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 171:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 172:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartClearRxBuffer
 173:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     ********************************************************************************
 174:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 175:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Summary:
 176:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Clears the receive buffer and RX FIFO.
 177:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 178:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Parameters:
 179:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  None
 180:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 181:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Return:
ARM GAS  C:\Users\YBOURA~1\AppData\Local\Temp\ccATHWVo.s 			page 6


 182:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  None
 183:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 184:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 185:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     void UART_SpiUartClearRxBuffer(void)
 186:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 105              		.loc 1 186 0
 106              		.cfi_startproc
 107 0000 80B5     		push	{r7, lr}
 108              		.cfi_def_cfa_offset 8
 109              		.cfi_offset 7, -8
 110              		.cfi_offset 14, -4
 111 0002 00AF     		add	r7, sp, #0
 112              		.cfi_def_cfa_register 7
 187:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_RX_SW_BUFFER)
 188:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 189:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Lock from component interruption */
 190:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_DisableInt();
 191:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 192:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Flush RX software buffer */
 193:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_rxBufferHead = UART_rxBufferTail;
 194:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_rxBufferOverflow = 0u;
 195:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 196:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_CLEAR_RX_FIFO;
 197:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_ClearRxInterruptSource(UART_INTR_RX_ALL);
 198:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 199:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             #if (UART_CHECK_UART_RTS_CONTROL_FLOW)
 200:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 201:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Enable RX Not Empty interrupt source to continue receiving
 202:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 * data into software buffer.
 203:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 */
 204:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_INTR_RX_MASK_REG |= UART_INTR_RX_NOT_EMPTY;
 205:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 206:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             #endif
 207:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 208:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Release lock */
 209:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_EnableInt();
 210:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 211:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 212:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 213:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_CLEAR_RX_FIFO;
 113              		.loc 1 213 0
 114 0004 074B     		ldr	r3, .L10
 115 0006 074A     		ldr	r2, .L10
 116 0008 1268     		ldr	r2, [r2]
 117 000a 8021     		mov	r1, #128
 118 000c 4902     		lsl	r1, r1, #9
 119 000e 0A43     		orr	r2, r1
 120 0010 1A60     		str	r2, [r3]
 121 0012 044B     		ldr	r3, .L10
 122 0014 034A     		ldr	r2, .L10
 123 0016 1268     		ldr	r2, [r2]
 124 0018 0349     		ldr	r1, .L10+4
 125 001a 0A40     		and	r2, r1
 126 001c 1A60     		str	r2, [r3]
 214:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 215:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 216:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     }
ARM GAS  C:\Users\YBOURA~1\AppData\Local\Temp\ccATHWVo.s 			page 7


 127              		.loc 1 216 0
 128 001e BD46     		mov	sp, r7
 129              		@ sp needed
 130 0020 80BD     		pop	{r7, pc}
 131              	.L11:
 132 0022 C046     		.align	2
 133              	.L10:
 134 0024 04032440 		.word	1076101892
 135 0028 FFFFFEFF 		.word	-65537
 136              		.cfi_endproc
 137              	.LFE4:
 138              		.size	UART_SpiUartClearRxBuffer, .-UART_SpiUartClearRxBuffer
 139              		.section	.text.UART_SpiUartWriteTxData,"ax",%progbits
 140              		.align	2
 141              		.global	UART_SpiUartWriteTxData
 142              		.code	16
 143              		.thumb_func
 144              		.type	UART_SpiUartWriteTxData, %function
 145              	UART_SpiUartWriteTxData:
 146              	.LFB5:
 217:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 218:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_RX_DIRECTION) */
 219:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 220:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 221:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_TX_DIRECTION)
 222:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 223:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartWriteTxData
 224:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     ********************************************************************************
 225:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 226:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Summary:
 227:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Places a data entry into the transmit buffer to be sent at the next available
 228:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  bus time.
 229:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  This function is blocking and waits until there is space available to put the
 230:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  requested data in the transmit buffer.
 231:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 232:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Parameters:
 233:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  txDataByte: the data to be transmitted.
 234:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 235:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Return:
 236:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  None
 237:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 238:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 239:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     void UART_SpiUartWriteTxData(uint32 txData)
 240:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 147              		.loc 1 240 0
 148              		.cfi_startproc
 149 0000 80B5     		push	{r7, lr}
 150              		.cfi_def_cfa_offset 8
 151              		.cfi_offset 7, -8
 152              		.cfi_offset 14, -4
 153 0002 82B0     		sub	sp, sp, #8
 154              		.cfi_def_cfa_offset 16
 155 0004 00AF     		add	r7, sp, #0
 156              		.cfi_def_cfa_register 7
 157 0006 7860     		str	r0, [r7, #4]
 241:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #if (UART_INTERNAL_TX_SW_BUFFER_CONST)
 242:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 locHead;
ARM GAS  C:\Users\YBOURA~1\AppData\Local\Temp\ccATHWVo.s 			page 8


 243:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #endif /* (UART_INTERNAL_TX_SW_BUFFER_CONST) */
 244:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 245:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_TX_SW_BUFFER)
 246:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 247:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Put data directly into the TX FIFO */
 248:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             if ((UART_txBufferHead == UART_txBufferTail) &&
 249:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 (UART_SPI_UART_FIFO_SIZE != UART_GET_TX_FIFO_ENTRIES))
 250:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 251:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* TX software buffer is empty: put data directly in TX FIFO */
 252:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_TX_FIFO_WR_REG = txData;
 253:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 254:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Put data into TX software buffer */
 255:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             else
 256:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 257:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Head index to put data */
 258:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 locHead = (UART_txBufferHead + 1u);
 259:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 260:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Adjust TX software buffer index */
 261:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 if (UART_TX_BUFFER_SIZE == locHead)
 262:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 263:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     locHead = 0u;
 264:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 265:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 266:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Wait for space in TX software buffer */
 267:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 while (locHead == UART_txBufferTail)
 268:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 269:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 270:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 271:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* TX software buffer has at least one room */
 272:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 273:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Clear old status of INTR_TX_NOT_FULL. It sets at the end of transfer when TX FIF
 274:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_ClearTxInterruptSource(UART_INTR_TX_NOT_FULL);
 275:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 276:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_PutWordInTxBuffer(locHead, txData);
 277:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 278:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_txBufferHead = locHead;
 279:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 280:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Check if TX Not Full is disabled in interrupt */
 281:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 if (0u == (UART_INTR_TX_MASK_REG & UART_INTR_TX_NOT_FULL))
 282:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 283:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     /* Enable TX Not Full interrupt source to transmit from software buffer */
 284:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     UART_INTR_TX_MASK_REG |= (uint32) UART_INTR_TX_NOT_FULL;
 285:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 286:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 287:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 288:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 289:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 290:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Wait until TX FIFO has space to put data element */
 291:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             while (UART_SPI_UART_FIFO_SIZE == UART_GET_TX_FIFO_ENTRIES)
 158              		.loc 1 291 0
 159 0008 C046     		mov	r8, r8
 160              	.L13:
 161              		.loc 1 291 0 is_stmt 0 discriminator 1
 162 000a 064B     		ldr	r3, .L14
 163 000c 1B68     		ldr	r3, [r3]
 164 000e 1F22     		mov	r2, #31
 165 0010 1340     		and	r3, r2
ARM GAS  C:\Users\YBOURA~1\AppData\Local\Temp\ccATHWVo.s 			page 9


 166 0012 082B     		cmp	r3, #8
 167 0014 F9D0     		beq	.L13
 292:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 293:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 294:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 295:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_TX_FIFO_WR_REG = txData;
 168              		.loc 1 295 0 is_stmt 1
 169 0016 044B     		ldr	r3, .L14+4
 170 0018 7A68     		ldr	r2, [r7, #4]
 171 001a 1A60     		str	r2, [r3]
 296:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 297:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 298:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 172              		.loc 1 298 0
 173 001c BD46     		mov	sp, r7
 174 001e 02B0     		add	sp, sp, #8
 175              		@ sp needed
 176 0020 80BD     		pop	{r7, pc}
 177              	.L15:
 178 0022 C046     		.align	2
 179              	.L14:
 180 0024 08022440 		.word	1076101640
 181 0028 40022440 		.word	1076101696
 182              		.cfi_endproc
 183              	.LFE5:
 184              		.size	UART_SpiUartWriteTxData, .-UART_SpiUartWriteTxData
 185              		.section	.text.UART_SpiUartPutArray,"ax",%progbits
 186              		.align	2
 187              		.global	UART_SpiUartPutArray
 188              		.code	16
 189              		.thumb_func
 190              		.type	UART_SpiUartPutArray, %function
 191              	UART_SpiUartPutArray:
 192              	.LFB6:
 299:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 300:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 301:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 302:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartPutArray
 303:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     ********************************************************************************
 304:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 305:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Summary:
 306:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Places an array of data into the transmit buffer to be sent.
 307:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  This function is blocking and waits until there is a space available to put
 308:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  all the requested data in the transmit buffer. The array size can be greater
 309:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  than transmit buffer size.
 310:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 311:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Parameters:
 312:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  wrBuf:  pointer to an array with data to be placed in transmit buffer.
 313:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  count:  number of data elements to be placed in the transmit buffer.
 314:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 315:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Return:
 316:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  None
 317:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 318:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 319:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     void UART_SpiUartPutArray(const uint8 wrBuf[], uint32 count)
 320:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 193              		.loc 1 320 0
ARM GAS  C:\Users\YBOURA~1\AppData\Local\Temp\ccATHWVo.s 			page 10


 194              		.cfi_startproc
 195 0000 80B5     		push	{r7, lr}
 196              		.cfi_def_cfa_offset 8
 197              		.cfi_offset 7, -8
 198              		.cfi_offset 14, -4
 199 0002 84B0     		sub	sp, sp, #16
 200              		.cfi_def_cfa_offset 24
 201 0004 00AF     		add	r7, sp, #0
 202              		.cfi_def_cfa_register 7
 203 0006 7860     		str	r0, [r7, #4]
 204 0008 3960     		str	r1, [r7]
 321:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 i;
 322:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 323:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         for (i=0u; i < count; i++)
 205              		.loc 1 323 0
 206 000a 0023     		mov	r3, #0
 207 000c FB60     		str	r3, [r7, #12]
 208 000e 09E0     		b	.L17
 209              	.L18:
 324:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 325:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_SpiUartWriteTxData((uint32) wrBuf[i]);
 210              		.loc 1 325 0 discriminator 3
 211 0010 7A68     		ldr	r2, [r7, #4]
 212 0012 FB68     		ldr	r3, [r7, #12]
 213 0014 D318     		add	r3, r2, r3
 214 0016 1B78     		ldrb	r3, [r3]
 215 0018 181C     		mov	r0, r3
 216 001a FFF7FEFF 		bl	UART_SpiUartWriteTxData
 323:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 217              		.loc 1 323 0 discriminator 3
 218 001e FB68     		ldr	r3, [r7, #12]
 219 0020 0133     		add	r3, r3, #1
 220 0022 FB60     		str	r3, [r7, #12]
 221              	.L17:
 323:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 222              		.loc 1 323 0 is_stmt 0 discriminator 1
 223 0024 FA68     		ldr	r2, [r7, #12]
 224 0026 3B68     		ldr	r3, [r7]
 225 0028 9A42     		cmp	r2, r3
 226 002a F1D3     		bcc	.L18
 326:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 327:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 227              		.loc 1 327 0 is_stmt 1
 228 002c BD46     		mov	sp, r7
 229 002e 04B0     		add	sp, sp, #16
 230              		@ sp needed
 231 0030 80BD     		pop	{r7, pc}
 232              		.cfi_endproc
 233              	.LFE6:
 234              		.size	UART_SpiUartPutArray, .-UART_SpiUartPutArray
 235 0032 C046     		.section	.text.UART_SpiUartGetTxBufferSize,"ax",%progbits
 236              		.align	2
 237              		.global	UART_SpiUartGetTxBufferSize
 238              		.code	16
 239              		.thumb_func
 240              		.type	UART_SpiUartGetTxBufferSize, %function
 241              	UART_SpiUartGetTxBufferSize:
ARM GAS  C:\Users\YBOURA~1\AppData\Local\Temp\ccATHWVo.s 			page 11


 242              	.LFB7:
 328:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 329:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 330:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 331:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartGetTxBufferSize
 332:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     ********************************************************************************
 333:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 334:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Summary:
 335:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Returns the number of elements currently in the transmit buffer.
 336:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  - TX software buffer is disabled: returns the number of used entries in
 337:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *    TX FIFO.
 338:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  - TX software buffer is enabled: returns the number of elements currently
 339:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *    used in the transmit buffer. This number does not include used entries in
 340:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *    the TX FIFO. The transmit buffer size is zero until the TX FIFO is
 341:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *    not full.
 342:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 343:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Parameters:
 344:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  None
 345:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 346:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Return:
 347:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Number of data elements ready to transmit.
 348:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 349:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 350:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 UART_SpiUartGetTxBufferSize(void)
 351:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 243              		.loc 1 351 0
 244              		.cfi_startproc
 245 0000 80B5     		push	{r7, lr}
 246              		.cfi_def_cfa_offset 8
 247              		.cfi_offset 7, -8
 248              		.cfi_offset 14, -4
 249 0002 82B0     		sub	sp, sp, #8
 250              		.cfi_def_cfa_offset 16
 251 0004 00AF     		add	r7, sp, #0
 252              		.cfi_def_cfa_register 7
 352:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 size;
 353:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #if (UART_INTERNAL_TX_SW_BUFFER_CONST)
 354:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 locTail;
 355:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #endif /* (UART_INTERNAL_TX_SW_BUFFER_CONST) */
 356:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 357:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_TX_SW_BUFFER)
 358:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 359:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Get current Tail index */
 360:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             locTail = UART_txBufferTail;
 361:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 362:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             if (UART_txBufferHead >= locTail)
 363:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 364:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 size = (UART_txBufferHead - locTail);
 365:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 366:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             else
 367:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 368:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 size = (UART_txBufferHead + (UART_TX_BUFFER_SIZE - locTail));
 369:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 370:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 371:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 372:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 373:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             size = UART_GET_TX_FIFO_ENTRIES;
ARM GAS  C:\Users\YBOURA~1\AppData\Local\Temp\ccATHWVo.s 			page 12


 253              		.loc 1 373 0
 254 0006 054B     		ldr	r3, .L21
 255 0008 1B68     		ldr	r3, [r3]
 256 000a 1F22     		mov	r2, #31
 257 000c 1340     		and	r3, r2
 258 000e 7B60     		str	r3, [r7, #4]
 374:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 375:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 376:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 377:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         return (size);
 259              		.loc 1 377 0
 260 0010 7B68     		ldr	r3, [r7, #4]
 378:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 261              		.loc 1 378 0
 262 0012 181C     		mov	r0, r3
 263 0014 BD46     		mov	sp, r7
 264 0016 02B0     		add	sp, sp, #8
 265              		@ sp needed
 266 0018 80BD     		pop	{r7, pc}
 267              	.L22:
 268 001a C046     		.align	2
 269              	.L21:
 270 001c 08022440 		.word	1076101640
 271              		.cfi_endproc
 272              	.LFE7:
 273              		.size	UART_SpiUartGetTxBufferSize, .-UART_SpiUartGetTxBufferSize
 274              		.section	.text.UART_SpiUartClearTxBuffer,"ax",%progbits
 275              		.align	2
 276              		.global	UART_SpiUartClearTxBuffer
 277              		.code	16
 278              		.thumb_func
 279              		.type	UART_SpiUartClearTxBuffer, %function
 280              	UART_SpiUartClearTxBuffer:
 281              	.LFB8:
 379:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 380:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 381:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 382:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartClearTxBuffer
 383:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     ********************************************************************************
 384:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 385:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Summary:
 386:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Clears the transmit buffer and TX FIFO.
 387:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 388:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Parameters:
 389:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  None
 390:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 391:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Return:
 392:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  None
 393:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 394:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 395:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     void UART_SpiUartClearTxBuffer(void)
 396:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 282              		.loc 1 396 0
 283              		.cfi_startproc
 284 0000 80B5     		push	{r7, lr}
 285              		.cfi_def_cfa_offset 8
 286              		.cfi_offset 7, -8
ARM GAS  C:\Users\YBOURA~1\AppData\Local\Temp\ccATHWVo.s 			page 13


 287              		.cfi_offset 14, -4
 288 0002 00AF     		add	r7, sp, #0
 289              		.cfi_def_cfa_register 7
 397:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_TX_SW_BUFFER)
 398:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 399:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Lock from component interruption */
 400:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_DisableInt();
 401:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 402:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Flush TX software buffer */
 403:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_txBufferHead = UART_txBufferTail;
 404:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 405:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_INTR_TX_MASK_REG &= (uint32) ~UART_INTR_TX_NOT_FULL;
 406:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_CLEAR_TX_FIFO;
 407:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_ClearTxInterruptSource(UART_INTR_TX_ALL);
 408:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 409:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Release lock */
 410:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_EnableInt();
 411:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 412:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 413:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 414:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_CLEAR_TX_FIFO;
 290              		.loc 1 414 0
 291 0004 074B     		ldr	r3, .L24
 292 0006 074A     		ldr	r2, .L24
 293 0008 1268     		ldr	r2, [r2]
 294 000a 8021     		mov	r1, #128
 295 000c 4902     		lsl	r1, r1, #9
 296 000e 0A43     		orr	r2, r1
 297 0010 1A60     		str	r2, [r3]
 298 0012 044B     		ldr	r3, .L24
 299 0014 034A     		ldr	r2, .L24
 300 0016 1268     		ldr	r2, [r2]
 301 0018 0349     		ldr	r1, .L24+4
 302 001a 0A40     		and	r2, r1
 303 001c 1A60     		str	r2, [r3]
 415:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 416:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 417:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 304              		.loc 1 417 0
 305 001e BD46     		mov	sp, r7
 306              		@ sp needed
 307 0020 80BD     		pop	{r7, pc}
 308              	.L25:
 309 0022 C046     		.align	2
 310              	.L24:
 311 0024 04022440 		.word	1076101636
 312 0028 FFFFFEFF 		.word	-65537
 313              		.cfi_endproc
 314              	.LFE8:
 315              		.size	UART_SpiUartClearTxBuffer, .-UART_SpiUartClearTxBuffer
 316              		.section	.text.UART_SpiUartDisableIntRx,"ax",%progbits
 317              		.align	2
 318              		.global	UART_SpiUartDisableIntRx
 319              		.code	16
 320              		.thumb_func
 321              		.type	UART_SpiUartDisableIntRx, %function
 322              	UART_SpiUartDisableIntRx:
ARM GAS  C:\Users\YBOURA~1\AppData\Local\Temp\ccATHWVo.s 			page 14


 323              	.LFB9:
 418:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 419:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_TX_DIRECTION) */
 420:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 421:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 422:.\Generated_Source\PSoC4/UART_SPI_UART.c **** /*******************************************************************************
 423:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Function Name: UART_SpiUartDisableIntRx
 424:.\Generated_Source\PSoC4/UART_SPI_UART.c **** ********************************************************************************
 425:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
 426:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Summary:
 427:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *  Disables the RX interrupt sources.
 428:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
 429:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Parameters:
 430:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *  None
 431:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
 432:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Return:
 433:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *  Returns the RX interrupt sources enabled before the function call.
 434:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
 435:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *******************************************************************************/
 436:.\Generated_Source\PSoC4/UART_SPI_UART.c **** uint32 UART_SpiUartDisableIntRx(void)
 437:.\Generated_Source\PSoC4/UART_SPI_UART.c **** {
 324              		.loc 1 437 0
 325              		.cfi_startproc
 326 0000 80B5     		push	{r7, lr}
 327              		.cfi_def_cfa_offset 8
 328              		.cfi_offset 7, -8
 329              		.cfi_offset 14, -4
 330 0002 82B0     		sub	sp, sp, #8
 331              		.cfi_def_cfa_offset 16
 332 0004 00AF     		add	r7, sp, #0
 333              		.cfi_def_cfa_register 7
 438:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 intSource;
 439:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 440:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     intSource = UART_GetRxInterruptMode();
 334              		.loc 1 440 0
 335 0006 054B     		ldr	r3, .L28
 336 0008 1B68     		ldr	r3, [r3]
 337 000a 7B60     		str	r3, [r7, #4]
 441:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 442:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     UART_SetRxInterruptMode(UART_NO_INTR_SOURCES);
 338              		.loc 1 442 0
 339 000c 034B     		ldr	r3, .L28
 340 000e 0022     		mov	r2, #0
 341 0010 1A60     		str	r2, [r3]
 443:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 444:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     return (intSource);
 342              		.loc 1 444 0
 343 0012 7B68     		ldr	r3, [r7, #4]
 445:.\Generated_Source\PSoC4/UART_SPI_UART.c **** }
 344              		.loc 1 445 0
 345 0014 181C     		mov	r0, r3
 346 0016 BD46     		mov	sp, r7
 347 0018 02B0     		add	sp, sp, #8
 348              		@ sp needed
 349 001a 80BD     		pop	{r7, pc}
 350              	.L29:
 351              		.align	2
ARM GAS  C:\Users\YBOURA~1\AppData\Local\Temp\ccATHWVo.s 			page 15


 352              	.L28:
 353 001c C80F2440 		.word	1076105160
 354              		.cfi_endproc
 355              	.LFE9:
 356              		.size	UART_SpiUartDisableIntRx, .-UART_SpiUartDisableIntRx
 357              		.section	.text.UART_SpiUartDisableIntTx,"ax",%progbits
 358              		.align	2
 359              		.global	UART_SpiUartDisableIntTx
 360              		.code	16
 361              		.thumb_func
 362              		.type	UART_SpiUartDisableIntTx, %function
 363              	UART_SpiUartDisableIntTx:
 364              	.LFB10:
 446:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 447:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 448:.\Generated_Source\PSoC4/UART_SPI_UART.c **** /*******************************************************************************
 449:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Function Name: UART_SpiUartDisableIntTx
 450:.\Generated_Source\PSoC4/UART_SPI_UART.c **** ********************************************************************************
 451:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
 452:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Summary:
 453:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *  Disables TX interrupt sources.
 454:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
 455:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Parameters:
 456:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *  None
 457:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
 458:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Return:
 459:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *  Returns TX interrupt sources enabled before function call.
 460:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
 461:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *******************************************************************************/
 462:.\Generated_Source\PSoC4/UART_SPI_UART.c **** uint32 UART_SpiUartDisableIntTx(void)
 463:.\Generated_Source\PSoC4/UART_SPI_UART.c **** {
 365              		.loc 1 463 0
 366              		.cfi_startproc
 367 0000 80B5     		push	{r7, lr}
 368              		.cfi_def_cfa_offset 8
 369              		.cfi_offset 7, -8
 370              		.cfi_offset 14, -4
 371 0002 82B0     		sub	sp, sp, #8
 372              		.cfi_def_cfa_offset 16
 373 0004 00AF     		add	r7, sp, #0
 374              		.cfi_def_cfa_register 7
 464:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 intSourceMask;
 465:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 466:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     intSourceMask = UART_GetTxInterruptMode();
 375              		.loc 1 466 0
 376 0006 054B     		ldr	r3, .L32
 377 0008 1B68     		ldr	r3, [r3]
 378 000a 7B60     		str	r3, [r7, #4]
 467:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 468:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     UART_SetTxInterruptMode(UART_NO_INTR_SOURCES);
 379              		.loc 1 468 0
 380 000c 034B     		ldr	r3, .L32
 381 000e 0022     		mov	r2, #0
 382 0010 1A60     		str	r2, [r3]
 469:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 470:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     return (intSourceMask);
 383              		.loc 1 470 0
ARM GAS  C:\Users\YBOURA~1\AppData\Local\Temp\ccATHWVo.s 			page 16


 384 0012 7B68     		ldr	r3, [r7, #4]
 471:.\Generated_Source\PSoC4/UART_SPI_UART.c **** }
 385              		.loc 1 471 0
 386 0014 181C     		mov	r0, r3
 387 0016 BD46     		mov	sp, r7
 388 0018 02B0     		add	sp, sp, #8
 389              		@ sp needed
 390 001a 80BD     		pop	{r7, pc}
 391              	.L33:
 392              		.align	2
 393              	.L32:
 394 001c 880F2440 		.word	1076105096
 395              		.cfi_endproc
 396              	.LFE10:
 397              		.size	UART_SpiUartDisableIntTx, .-UART_SpiUartDisableIntTx
 398              		.text
 399              	.Letext0:
 400              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 401              		.section	.debug_info,"",%progbits
 402              	.Ldebug_info0:
 403 0000 09020000 		.4byte	0x209
 404 0004 0400     		.2byte	0x4
 405 0006 00000000 		.4byte	.Ldebug_abbrev0
 406 000a 04       		.byte	0x4
 407 000b 01       		.uleb128 0x1
 408 000c F3000000 		.4byte	.LASF32
 409 0010 01       		.byte	0x1
 410 0011 3B020000 		.4byte	.LASF33
 411 0015 33000000 		.4byte	.LASF34
 412 0019 00000000 		.4byte	.Ldebug_ranges0+0
 413 001d 00000000 		.4byte	0
 414 0021 00000000 		.4byte	.Ldebug_line0
 415 0025 02       		.uleb128 0x2
 416 0026 01       		.byte	0x1
 417 0027 06       		.byte	0x6
 418 0028 A3020000 		.4byte	.LASF0
 419 002c 02       		.uleb128 0x2
 420 002d 01       		.byte	0x1
 421 002e 08       		.byte	0x8
 422 002f DE000000 		.4byte	.LASF1
 423 0033 02       		.uleb128 0x2
 424 0034 02       		.byte	0x2
 425 0035 05       		.byte	0x5
 426 0036 31020000 		.4byte	.LASF2
 427 003a 02       		.uleb128 0x2
 428 003b 02       		.byte	0x2
 429 003c 07       		.byte	0x7
 430 003d 13000000 		.4byte	.LASF3
 431 0041 02       		.uleb128 0x2
 432 0042 04       		.byte	0x4
 433 0043 05       		.byte	0x5
 434 0044 7B020000 		.4byte	.LASF4
 435 0048 02       		.uleb128 0x2
 436 0049 04       		.byte	0x4
 437 004a 07       		.byte	0x7
 438 004b B9000000 		.4byte	.LASF5
 439 004f 02       		.uleb128 0x2
ARM GAS  C:\Users\YBOURA~1\AppData\Local\Temp\ccATHWVo.s 			page 17


 440 0050 08       		.byte	0x8
 441 0051 05       		.byte	0x5
 442 0052 EF010000 		.4byte	.LASF6
 443 0056 02       		.uleb128 0x2
 444 0057 08       		.byte	0x8
 445 0058 07       		.byte	0x7
 446 0059 CF010000 		.4byte	.LASF7
 447 005d 03       		.uleb128 0x3
 448 005e 04       		.byte	0x4
 449 005f 05       		.byte	0x5
 450 0060 696E7400 		.ascii	"int\000"
 451 0064 02       		.uleb128 0x2
 452 0065 04       		.byte	0x4
 453 0066 07       		.byte	0x7
 454 0067 26000000 		.4byte	.LASF8
 455 006b 04       		.uleb128 0x4
 456 006c CB000000 		.4byte	.LASF9
 457 0070 02       		.byte	0x2
 458 0071 C2       		.byte	0xc2
 459 0072 2C000000 		.4byte	0x2c
 460 0076 04       		.uleb128 0x4
 461 0077 81010000 		.4byte	.LASF10
 462 007b 02       		.byte	0x2
 463 007c C4       		.byte	0xc4
 464 007d 48000000 		.4byte	0x48
 465 0081 02       		.uleb128 0x2
 466 0082 04       		.byte	0x4
 467 0083 04       		.byte	0x4
 468 0084 95000000 		.4byte	.LASF11
 469 0088 02       		.uleb128 0x2
 470 0089 08       		.byte	0x8
 471 008a 04       		.byte	0x4
 472 008b EC000000 		.4byte	.LASF12
 473 008f 02       		.uleb128 0x2
 474 0090 01       		.byte	0x1
 475 0091 08       		.byte	0x8
 476 0092 84020000 		.4byte	.LASF13
 477 0096 05       		.uleb128 0x5
 478 0097 00000000 		.4byte	.LASF14
 479 009b 02       		.byte	0x2
 480 009c 6E01     		.2byte	0x16e
 481 009e A2000000 		.4byte	0xa2
 482 00a2 06       		.uleb128 0x6
 483 00a3 76000000 		.4byte	0x76
 484 00a7 02       		.uleb128 0x2
 485 00a8 04       		.byte	0x4
 486 00a9 07       		.byte	0x7
 487 00aa E6010000 		.4byte	.LASF15
 488 00ae 07       		.uleb128 0x7
 489 00af 64020000 		.4byte	.LASF16
 490 00b3 01       		.byte	0x1
 491 00b4 45       		.byte	0x45
 492 00b5 76000000 		.4byte	0x76
 493 00b9 00000000 		.4byte	.LFB2
 494 00bd 20000000 		.4byte	.LFE2-.LFB2
 495 00c1 01       		.uleb128 0x1
 496 00c2 9C       		.byte	0x9c
ARM GAS  C:\Users\YBOURA~1\AppData\Local\Temp\ccATHWVo.s 			page 18


 497 00c3 D6000000 		.4byte	0xd6
 498 00c7 08       		.uleb128 0x8
 499 00c8 D1000000 		.4byte	.LASF18
 500 00cc 01       		.byte	0x1
 501 00cd 47       		.byte	0x47
 502 00ce 76000000 		.4byte	0x76
 503 00d2 02       		.uleb128 0x2
 504 00d3 91       		.byte	0x91
 505 00d4 74       		.sleb128 -12
 506 00d5 00       		.byte	0
 507 00d6 07       		.uleb128 0x7
 508 00d7 AF020000 		.4byte	.LASF17
 509 00db 01       		.byte	0x1
 510 00dc 8D       		.byte	0x8d
 511 00dd 76000000 		.4byte	0x76
 512 00e1 00000000 		.4byte	.LFB3
 513 00e5 20000000 		.4byte	.LFE3-.LFB3
 514 00e9 01       		.uleb128 0x1
 515 00ea 9C       		.byte	0x9c
 516 00eb FE000000 		.4byte	0xfe
 517 00ef 08       		.uleb128 0x8
 518 00f0 B4000000 		.4byte	.LASF19
 519 00f4 01       		.byte	0x1
 520 00f5 8F       		.byte	0x8f
 521 00f6 76000000 		.4byte	0x76
 522 00fa 02       		.uleb128 0x2
 523 00fb 91       		.byte	0x91
 524 00fc 74       		.sleb128 -12
 525 00fd 00       		.byte	0
 526 00fe 09       		.uleb128 0x9
 527 00ff 89020000 		.4byte	.LASF26
 528 0103 01       		.byte	0x1
 529 0104 B9       		.byte	0xb9
 530 0105 00000000 		.4byte	.LFB4
 531 0109 2C000000 		.4byte	.LFE4-.LFB4
 532 010d 01       		.uleb128 0x1
 533 010e 9C       		.byte	0x9c
 534 010f 0A       		.uleb128 0xa
 535 0110 FD010000 		.4byte	.LASF20
 536 0114 01       		.byte	0x1
 537 0115 EF       		.byte	0xef
 538 0116 00000000 		.4byte	.LFB5
 539 011a 2C000000 		.4byte	.LFE5-.LFB5
 540 011e 01       		.uleb128 0x1
 541 011f 9C       		.byte	0x9c
 542 0120 33010000 		.4byte	0x133
 543 0124 0B       		.uleb128 0xb
 544 0125 0C000000 		.4byte	.LASF22
 545 0129 01       		.byte	0x1
 546 012a EF       		.byte	0xef
 547 012b 76000000 		.4byte	0x76
 548 012f 02       		.uleb128 0x2
 549 0130 91       		.byte	0x91
 550 0131 74       		.sleb128 -12
 551 0132 00       		.byte	0
 552 0133 0C       		.uleb128 0xc
 553 0134 A2010000 		.4byte	.LASF21
ARM GAS  C:\Users\YBOURA~1\AppData\Local\Temp\ccATHWVo.s 			page 19


 554 0138 01       		.byte	0x1
 555 0139 3F01     		.2byte	0x13f
 556 013b 00000000 		.4byte	.LFB6
 557 013f 32000000 		.4byte	.LFE6-.LFB6
 558 0143 01       		.uleb128 0x1
 559 0144 9C       		.byte	0x9c
 560 0145 75010000 		.4byte	0x175
 561 0149 0D       		.uleb128 0xd
 562 014a D8000000 		.4byte	.LASF23
 563 014e 01       		.byte	0x1
 564 014f 3F01     		.2byte	0x13f
 565 0151 75010000 		.4byte	0x175
 566 0155 02       		.uleb128 0x2
 567 0156 91       		.byte	0x91
 568 0157 6C       		.sleb128 -20
 569 0158 0D       		.uleb128 0xd
 570 0159 06000000 		.4byte	.LASF24
 571 015d 01       		.byte	0x1
 572 015e 3F01     		.2byte	0x13f
 573 0160 76000000 		.4byte	0x76
 574 0164 02       		.uleb128 0x2
 575 0165 91       		.byte	0x91
 576 0166 68       		.sleb128 -24
 577 0167 0E       		.uleb128 0xe
 578 0168 6900     		.ascii	"i\000"
 579 016a 01       		.byte	0x1
 580 016b 4101     		.2byte	0x141
 581 016d 76000000 		.4byte	0x76
 582 0171 02       		.uleb128 0x2
 583 0172 91       		.byte	0x91
 584 0173 74       		.sleb128 -12
 585 0174 00       		.byte	0
 586 0175 0F       		.uleb128 0xf
 587 0176 04       		.byte	0x4
 588 0177 7B010000 		.4byte	0x17b
 589 017b 10       		.uleb128 0x10
 590 017c 6B000000 		.4byte	0x6b
 591 0180 11       		.uleb128 0x11
 592 0181 15020000 		.4byte	.LASF25
 593 0185 01       		.byte	0x1
 594 0186 5E01     		.2byte	0x15e
 595 0188 76000000 		.4byte	0x76
 596 018c 00000000 		.4byte	.LFB7
 597 0190 20000000 		.4byte	.LFE7-.LFB7
 598 0194 01       		.uleb128 0x1
 599 0195 9C       		.byte	0x9c
 600 0196 AA010000 		.4byte	0x1aa
 601 019a 12       		.uleb128 0x12
 602 019b B4000000 		.4byte	.LASF19
 603 019f 01       		.byte	0x1
 604 01a0 6001     		.2byte	0x160
 605 01a2 76000000 		.4byte	0x76
 606 01a6 02       		.uleb128 0x2
 607 01a7 91       		.byte	0x91
 608 01a8 74       		.sleb128 -12
 609 01a9 00       		.byte	0
 610 01aa 13       		.uleb128 0x13
ARM GAS  C:\Users\YBOURA~1\AppData\Local\Temp\ccATHWVo.s 			page 20


 611 01ab 88010000 		.4byte	.LASF27
 612 01af 01       		.byte	0x1
 613 01b0 8B01     		.2byte	0x18b
 614 01b2 00000000 		.4byte	.LFB8
 615 01b6 2C000000 		.4byte	.LFE8-.LFB8
 616 01ba 01       		.uleb128 0x1
 617 01bb 9C       		.byte	0x9c
 618 01bc 11       		.uleb128 0x11
 619 01bd 7C000000 		.4byte	.LASF28
 620 01c1 01       		.byte	0x1
 621 01c2 B401     		.2byte	0x1b4
 622 01c4 76000000 		.4byte	0x76
 623 01c8 00000000 		.4byte	.LFB9
 624 01cc 20000000 		.4byte	.LFE9-.LFB9
 625 01d0 01       		.uleb128 0x1
 626 01d1 9C       		.byte	0x9c
 627 01d2 E6010000 		.4byte	0x1e6
 628 01d6 12       		.uleb128 0x12
 629 01d7 C5010000 		.4byte	.LASF29
 630 01db 01       		.byte	0x1
 631 01dc B601     		.2byte	0x1b6
 632 01de 76000000 		.4byte	0x76
 633 01e2 02       		.uleb128 0x2
 634 01e3 91       		.byte	0x91
 635 01e4 74       		.sleb128 -12
 636 01e5 00       		.byte	0
 637 01e6 14       		.uleb128 0x14
 638 01e7 9B000000 		.4byte	.LASF30
 639 01eb 01       		.byte	0x1
 640 01ec CE01     		.2byte	0x1ce
 641 01ee 76000000 		.4byte	0x76
 642 01f2 00000000 		.4byte	.LFB10
 643 01f6 20000000 		.4byte	.LFE10-.LFB10
 644 01fa 01       		.uleb128 0x1
 645 01fb 9C       		.byte	0x9c
 646 01fc 12       		.uleb128 0x12
 647 01fd B7010000 		.4byte	.LASF31
 648 0201 01       		.byte	0x1
 649 0202 D001     		.2byte	0x1d0
 650 0204 76000000 		.4byte	0x76
 651 0208 02       		.uleb128 0x2
 652 0209 91       		.byte	0x91
 653 020a 74       		.sleb128 -12
 654 020b 00       		.byte	0
 655 020c 00       		.byte	0
 656              		.section	.debug_abbrev,"",%progbits
 657              	.Ldebug_abbrev0:
 658 0000 01       		.uleb128 0x1
 659 0001 11       		.uleb128 0x11
 660 0002 01       		.byte	0x1
 661 0003 25       		.uleb128 0x25
 662 0004 0E       		.uleb128 0xe
 663 0005 13       		.uleb128 0x13
 664 0006 0B       		.uleb128 0xb
 665 0007 03       		.uleb128 0x3
 666 0008 0E       		.uleb128 0xe
 667 0009 1B       		.uleb128 0x1b
ARM GAS  C:\Users\YBOURA~1\AppData\Local\Temp\ccATHWVo.s 			page 21


 668 000a 0E       		.uleb128 0xe
 669 000b 55       		.uleb128 0x55
 670 000c 17       		.uleb128 0x17
 671 000d 11       		.uleb128 0x11
 672 000e 01       		.uleb128 0x1
 673 000f 10       		.uleb128 0x10
 674 0010 17       		.uleb128 0x17
 675 0011 00       		.byte	0
 676 0012 00       		.byte	0
 677 0013 02       		.uleb128 0x2
 678 0014 24       		.uleb128 0x24
 679 0015 00       		.byte	0
 680 0016 0B       		.uleb128 0xb
 681 0017 0B       		.uleb128 0xb
 682 0018 3E       		.uleb128 0x3e
 683 0019 0B       		.uleb128 0xb
 684 001a 03       		.uleb128 0x3
 685 001b 0E       		.uleb128 0xe
 686 001c 00       		.byte	0
 687 001d 00       		.byte	0
 688 001e 03       		.uleb128 0x3
 689 001f 24       		.uleb128 0x24
 690 0020 00       		.byte	0
 691 0021 0B       		.uleb128 0xb
 692 0022 0B       		.uleb128 0xb
 693 0023 3E       		.uleb128 0x3e
 694 0024 0B       		.uleb128 0xb
 695 0025 03       		.uleb128 0x3
 696 0026 08       		.uleb128 0x8
 697 0027 00       		.byte	0
 698 0028 00       		.byte	0
 699 0029 04       		.uleb128 0x4
 700 002a 16       		.uleb128 0x16
 701 002b 00       		.byte	0
 702 002c 03       		.uleb128 0x3
 703 002d 0E       		.uleb128 0xe
 704 002e 3A       		.uleb128 0x3a
 705 002f 0B       		.uleb128 0xb
 706 0030 3B       		.uleb128 0x3b
 707 0031 0B       		.uleb128 0xb
 708 0032 49       		.uleb128 0x49
 709 0033 13       		.uleb128 0x13
 710 0034 00       		.byte	0
 711 0035 00       		.byte	0
 712 0036 05       		.uleb128 0x5
 713 0037 16       		.uleb128 0x16
 714 0038 00       		.byte	0
 715 0039 03       		.uleb128 0x3
 716 003a 0E       		.uleb128 0xe
 717 003b 3A       		.uleb128 0x3a
 718 003c 0B       		.uleb128 0xb
 719 003d 3B       		.uleb128 0x3b
 720 003e 05       		.uleb128 0x5
 721 003f 49       		.uleb128 0x49
 722 0040 13       		.uleb128 0x13
 723 0041 00       		.byte	0
 724 0042 00       		.byte	0
ARM GAS  C:\Users\YBOURA~1\AppData\Local\Temp\ccATHWVo.s 			page 22


 725 0043 06       		.uleb128 0x6
 726 0044 35       		.uleb128 0x35
 727 0045 00       		.byte	0
 728 0046 49       		.uleb128 0x49
 729 0047 13       		.uleb128 0x13
 730 0048 00       		.byte	0
 731 0049 00       		.byte	0
 732 004a 07       		.uleb128 0x7
 733 004b 2E       		.uleb128 0x2e
 734 004c 01       		.byte	0x1
 735 004d 3F       		.uleb128 0x3f
 736 004e 19       		.uleb128 0x19
 737 004f 03       		.uleb128 0x3
 738 0050 0E       		.uleb128 0xe
 739 0051 3A       		.uleb128 0x3a
 740 0052 0B       		.uleb128 0xb
 741 0053 3B       		.uleb128 0x3b
 742 0054 0B       		.uleb128 0xb
 743 0055 27       		.uleb128 0x27
 744 0056 19       		.uleb128 0x19
 745 0057 49       		.uleb128 0x49
 746 0058 13       		.uleb128 0x13
 747 0059 11       		.uleb128 0x11
 748 005a 01       		.uleb128 0x1
 749 005b 12       		.uleb128 0x12
 750 005c 06       		.uleb128 0x6
 751 005d 40       		.uleb128 0x40
 752 005e 18       		.uleb128 0x18
 753 005f 9742     		.uleb128 0x2117
 754 0061 19       		.uleb128 0x19
 755 0062 01       		.uleb128 0x1
 756 0063 13       		.uleb128 0x13
 757 0064 00       		.byte	0
 758 0065 00       		.byte	0
 759 0066 08       		.uleb128 0x8
 760 0067 34       		.uleb128 0x34
 761 0068 00       		.byte	0
 762 0069 03       		.uleb128 0x3
 763 006a 0E       		.uleb128 0xe
 764 006b 3A       		.uleb128 0x3a
 765 006c 0B       		.uleb128 0xb
 766 006d 3B       		.uleb128 0x3b
 767 006e 0B       		.uleb128 0xb
 768 006f 49       		.uleb128 0x49
 769 0070 13       		.uleb128 0x13
 770 0071 02       		.uleb128 0x2
 771 0072 18       		.uleb128 0x18
 772 0073 00       		.byte	0
 773 0074 00       		.byte	0
 774 0075 09       		.uleb128 0x9
 775 0076 2E       		.uleb128 0x2e
 776 0077 00       		.byte	0
 777 0078 3F       		.uleb128 0x3f
 778 0079 19       		.uleb128 0x19
 779 007a 03       		.uleb128 0x3
 780 007b 0E       		.uleb128 0xe
 781 007c 3A       		.uleb128 0x3a
ARM GAS  C:\Users\YBOURA~1\AppData\Local\Temp\ccATHWVo.s 			page 23


 782 007d 0B       		.uleb128 0xb
 783 007e 3B       		.uleb128 0x3b
 784 007f 0B       		.uleb128 0xb
 785 0080 27       		.uleb128 0x27
 786 0081 19       		.uleb128 0x19
 787 0082 11       		.uleb128 0x11
 788 0083 01       		.uleb128 0x1
 789 0084 12       		.uleb128 0x12
 790 0085 06       		.uleb128 0x6
 791 0086 40       		.uleb128 0x40
 792 0087 18       		.uleb128 0x18
 793 0088 9742     		.uleb128 0x2117
 794 008a 19       		.uleb128 0x19
 795 008b 00       		.byte	0
 796 008c 00       		.byte	0
 797 008d 0A       		.uleb128 0xa
 798 008e 2E       		.uleb128 0x2e
 799 008f 01       		.byte	0x1
 800 0090 3F       		.uleb128 0x3f
 801 0091 19       		.uleb128 0x19
 802 0092 03       		.uleb128 0x3
 803 0093 0E       		.uleb128 0xe
 804 0094 3A       		.uleb128 0x3a
 805 0095 0B       		.uleb128 0xb
 806 0096 3B       		.uleb128 0x3b
 807 0097 0B       		.uleb128 0xb
 808 0098 27       		.uleb128 0x27
 809 0099 19       		.uleb128 0x19
 810 009a 11       		.uleb128 0x11
 811 009b 01       		.uleb128 0x1
 812 009c 12       		.uleb128 0x12
 813 009d 06       		.uleb128 0x6
 814 009e 40       		.uleb128 0x40
 815 009f 18       		.uleb128 0x18
 816 00a0 9742     		.uleb128 0x2117
 817 00a2 19       		.uleb128 0x19
 818 00a3 01       		.uleb128 0x1
 819 00a4 13       		.uleb128 0x13
 820 00a5 00       		.byte	0
 821 00a6 00       		.byte	0
 822 00a7 0B       		.uleb128 0xb
 823 00a8 05       		.uleb128 0x5
 824 00a9 00       		.byte	0
 825 00aa 03       		.uleb128 0x3
 826 00ab 0E       		.uleb128 0xe
 827 00ac 3A       		.uleb128 0x3a
 828 00ad 0B       		.uleb128 0xb
 829 00ae 3B       		.uleb128 0x3b
 830 00af 0B       		.uleb128 0xb
 831 00b0 49       		.uleb128 0x49
 832 00b1 13       		.uleb128 0x13
 833 00b2 02       		.uleb128 0x2
 834 00b3 18       		.uleb128 0x18
 835 00b4 00       		.byte	0
 836 00b5 00       		.byte	0
 837 00b6 0C       		.uleb128 0xc
 838 00b7 2E       		.uleb128 0x2e
ARM GAS  C:\Users\YBOURA~1\AppData\Local\Temp\ccATHWVo.s 			page 24


 839 00b8 01       		.byte	0x1
 840 00b9 3F       		.uleb128 0x3f
 841 00ba 19       		.uleb128 0x19
 842 00bb 03       		.uleb128 0x3
 843 00bc 0E       		.uleb128 0xe
 844 00bd 3A       		.uleb128 0x3a
 845 00be 0B       		.uleb128 0xb
 846 00bf 3B       		.uleb128 0x3b
 847 00c0 05       		.uleb128 0x5
 848 00c1 27       		.uleb128 0x27
 849 00c2 19       		.uleb128 0x19
 850 00c3 11       		.uleb128 0x11
 851 00c4 01       		.uleb128 0x1
 852 00c5 12       		.uleb128 0x12
 853 00c6 06       		.uleb128 0x6
 854 00c7 40       		.uleb128 0x40
 855 00c8 18       		.uleb128 0x18
 856 00c9 9642     		.uleb128 0x2116
 857 00cb 19       		.uleb128 0x19
 858 00cc 01       		.uleb128 0x1
 859 00cd 13       		.uleb128 0x13
 860 00ce 00       		.byte	0
 861 00cf 00       		.byte	0
 862 00d0 0D       		.uleb128 0xd
 863 00d1 05       		.uleb128 0x5
 864 00d2 00       		.byte	0
 865 00d3 03       		.uleb128 0x3
 866 00d4 0E       		.uleb128 0xe
 867 00d5 3A       		.uleb128 0x3a
 868 00d6 0B       		.uleb128 0xb
 869 00d7 3B       		.uleb128 0x3b
 870 00d8 05       		.uleb128 0x5
 871 00d9 49       		.uleb128 0x49
 872 00da 13       		.uleb128 0x13
 873 00db 02       		.uleb128 0x2
 874 00dc 18       		.uleb128 0x18
 875 00dd 00       		.byte	0
 876 00de 00       		.byte	0
 877 00df 0E       		.uleb128 0xe
 878 00e0 34       		.uleb128 0x34
 879 00e1 00       		.byte	0
 880 00e2 03       		.uleb128 0x3
 881 00e3 08       		.uleb128 0x8
 882 00e4 3A       		.uleb128 0x3a
 883 00e5 0B       		.uleb128 0xb
 884 00e6 3B       		.uleb128 0x3b
 885 00e7 05       		.uleb128 0x5
 886 00e8 49       		.uleb128 0x49
 887 00e9 13       		.uleb128 0x13
 888 00ea 02       		.uleb128 0x2
 889 00eb 18       		.uleb128 0x18
 890 00ec 00       		.byte	0
 891 00ed 00       		.byte	0
 892 00ee 0F       		.uleb128 0xf
 893 00ef 0F       		.uleb128 0xf
 894 00f0 00       		.byte	0
 895 00f1 0B       		.uleb128 0xb
ARM GAS  C:\Users\YBOURA~1\AppData\Local\Temp\ccATHWVo.s 			page 25


 896 00f2 0B       		.uleb128 0xb
 897 00f3 49       		.uleb128 0x49
 898 00f4 13       		.uleb128 0x13
 899 00f5 00       		.byte	0
 900 00f6 00       		.byte	0
 901 00f7 10       		.uleb128 0x10
 902 00f8 26       		.uleb128 0x26
 903 00f9 00       		.byte	0
 904 00fa 49       		.uleb128 0x49
 905 00fb 13       		.uleb128 0x13
 906 00fc 00       		.byte	0
 907 00fd 00       		.byte	0
 908 00fe 11       		.uleb128 0x11
 909 00ff 2E       		.uleb128 0x2e
 910 0100 01       		.byte	0x1
 911 0101 3F       		.uleb128 0x3f
 912 0102 19       		.uleb128 0x19
 913 0103 03       		.uleb128 0x3
 914 0104 0E       		.uleb128 0xe
 915 0105 3A       		.uleb128 0x3a
 916 0106 0B       		.uleb128 0xb
 917 0107 3B       		.uleb128 0x3b
 918 0108 05       		.uleb128 0x5
 919 0109 27       		.uleb128 0x27
 920 010a 19       		.uleb128 0x19
 921 010b 49       		.uleb128 0x49
 922 010c 13       		.uleb128 0x13
 923 010d 11       		.uleb128 0x11
 924 010e 01       		.uleb128 0x1
 925 010f 12       		.uleb128 0x12
 926 0110 06       		.uleb128 0x6
 927 0111 40       		.uleb128 0x40
 928 0112 18       		.uleb128 0x18
 929 0113 9742     		.uleb128 0x2117
 930 0115 19       		.uleb128 0x19
 931 0116 01       		.uleb128 0x1
 932 0117 13       		.uleb128 0x13
 933 0118 00       		.byte	0
 934 0119 00       		.byte	0
 935 011a 12       		.uleb128 0x12
 936 011b 34       		.uleb128 0x34
 937 011c 00       		.byte	0
 938 011d 03       		.uleb128 0x3
 939 011e 0E       		.uleb128 0xe
 940 011f 3A       		.uleb128 0x3a
 941 0120 0B       		.uleb128 0xb
 942 0121 3B       		.uleb128 0x3b
 943 0122 05       		.uleb128 0x5
 944 0123 49       		.uleb128 0x49
 945 0124 13       		.uleb128 0x13
 946 0125 02       		.uleb128 0x2
 947 0126 18       		.uleb128 0x18
 948 0127 00       		.byte	0
 949 0128 00       		.byte	0
 950 0129 13       		.uleb128 0x13
 951 012a 2E       		.uleb128 0x2e
 952 012b 00       		.byte	0
ARM GAS  C:\Users\YBOURA~1\AppData\Local\Temp\ccATHWVo.s 			page 26


 953 012c 3F       		.uleb128 0x3f
 954 012d 19       		.uleb128 0x19
 955 012e 03       		.uleb128 0x3
 956 012f 0E       		.uleb128 0xe
 957 0130 3A       		.uleb128 0x3a
 958 0131 0B       		.uleb128 0xb
 959 0132 3B       		.uleb128 0x3b
 960 0133 05       		.uleb128 0x5
 961 0134 27       		.uleb128 0x27
 962 0135 19       		.uleb128 0x19
 963 0136 11       		.uleb128 0x11
 964 0137 01       		.uleb128 0x1
 965 0138 12       		.uleb128 0x12
 966 0139 06       		.uleb128 0x6
 967 013a 40       		.uleb128 0x40
 968 013b 18       		.uleb128 0x18
 969 013c 9742     		.uleb128 0x2117
 970 013e 19       		.uleb128 0x19
 971 013f 00       		.byte	0
 972 0140 00       		.byte	0
 973 0141 14       		.uleb128 0x14
 974 0142 2E       		.uleb128 0x2e
 975 0143 01       		.byte	0x1
 976 0144 3F       		.uleb128 0x3f
 977 0145 19       		.uleb128 0x19
 978 0146 03       		.uleb128 0x3
 979 0147 0E       		.uleb128 0xe
 980 0148 3A       		.uleb128 0x3a
 981 0149 0B       		.uleb128 0xb
 982 014a 3B       		.uleb128 0x3b
 983 014b 05       		.uleb128 0x5
 984 014c 27       		.uleb128 0x27
 985 014d 19       		.uleb128 0x19
 986 014e 49       		.uleb128 0x49
 987 014f 13       		.uleb128 0x13
 988 0150 11       		.uleb128 0x11
 989 0151 01       		.uleb128 0x1
 990 0152 12       		.uleb128 0x12
 991 0153 06       		.uleb128 0x6
 992 0154 40       		.uleb128 0x40
 993 0155 18       		.uleb128 0x18
 994 0156 9742     		.uleb128 0x2117
 995 0158 19       		.uleb128 0x19
 996 0159 00       		.byte	0
 997 015a 00       		.byte	0
 998 015b 00       		.byte	0
 999              		.section	.debug_aranges,"",%progbits
 1000 0000 5C000000 		.4byte	0x5c
 1001 0004 0200     		.2byte	0x2
 1002 0006 00000000 		.4byte	.Ldebug_info0
 1003 000a 04       		.byte	0x4
 1004 000b 00       		.byte	0
 1005 000c 0000     		.2byte	0
 1006 000e 0000     		.2byte	0
 1007 0010 00000000 		.4byte	.LFB2
 1008 0014 20000000 		.4byte	.LFE2-.LFB2
 1009 0018 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\YBOURA~1\AppData\Local\Temp\ccATHWVo.s 			page 27


 1010 001c 20000000 		.4byte	.LFE3-.LFB3
 1011 0020 00000000 		.4byte	.LFB4
 1012 0024 2C000000 		.4byte	.LFE4-.LFB4
 1013 0028 00000000 		.4byte	.LFB5
 1014 002c 2C000000 		.4byte	.LFE5-.LFB5
 1015 0030 00000000 		.4byte	.LFB6
 1016 0034 32000000 		.4byte	.LFE6-.LFB6
 1017 0038 00000000 		.4byte	.LFB7
 1018 003c 20000000 		.4byte	.LFE7-.LFB7
 1019 0040 00000000 		.4byte	.LFB8
 1020 0044 2C000000 		.4byte	.LFE8-.LFB8
 1021 0048 00000000 		.4byte	.LFB9
 1022 004c 20000000 		.4byte	.LFE9-.LFB9
 1023 0050 00000000 		.4byte	.LFB10
 1024 0054 20000000 		.4byte	.LFE10-.LFB10
 1025 0058 00000000 		.4byte	0
 1026 005c 00000000 		.4byte	0
 1027              		.section	.debug_ranges,"",%progbits
 1028              	.Ldebug_ranges0:
 1029 0000 00000000 		.4byte	.LFB2
 1030 0004 20000000 		.4byte	.LFE2
 1031 0008 00000000 		.4byte	.LFB3
 1032 000c 20000000 		.4byte	.LFE3
 1033 0010 00000000 		.4byte	.LFB4
 1034 0014 2C000000 		.4byte	.LFE4
 1035 0018 00000000 		.4byte	.LFB5
 1036 001c 2C000000 		.4byte	.LFE5
 1037 0020 00000000 		.4byte	.LFB6
 1038 0024 32000000 		.4byte	.LFE6
 1039 0028 00000000 		.4byte	.LFB7
 1040 002c 20000000 		.4byte	.LFE7
 1041 0030 00000000 		.4byte	.LFB8
 1042 0034 2C000000 		.4byte	.LFE8
 1043 0038 00000000 		.4byte	.LFB9
 1044 003c 20000000 		.4byte	.LFE9
 1045 0040 00000000 		.4byte	.LFB10
 1046 0044 20000000 		.4byte	.LFE10
 1047 0048 00000000 		.4byte	0
 1048 004c 00000000 		.4byte	0
 1049              		.section	.debug_line,"",%progbits
 1050              	.Ldebug_line0:
 1051 0000 38010000 		.section	.debug_str,"MS",%progbits,1
 1051      02006300 
 1051      00000201 
 1051      FB0E0D00 
 1051      01010101 
 1052              	.LASF14:
 1053 0000 72656733 		.ascii	"reg32\000"
 1053      3200
 1054              	.LASF24:
 1055 0006 636F756E 		.ascii	"count\000"
 1055      7400
 1056              	.LASF22:
 1057 000c 74784461 		.ascii	"txData\000"
 1057      746100
 1058              	.LASF3:
 1059 0013 73686F72 		.ascii	"short unsigned int\000"
ARM GAS  C:\Users\YBOURA~1\AppData\Local\Temp\ccATHWVo.s 			page 28


 1059      7420756E 
 1059      7369676E 
 1059      65642069 
 1059      6E7400
 1060              	.LASF8:
 1061 0026 756E7369 		.ascii	"unsigned int\000"
 1061      676E6564 
 1061      20696E74 
 1061      00
 1062              	.LASF34:
 1063 0033 433A5C55 		.ascii	"C:\\Users\\ybourassa\\Documents\\GitHub\\PROC-OBSER"
 1063      73657273 
 1063      5C79626F 
 1063      75726173 
 1063      73615C44 
 1064 0061 5645522D 		.ascii	"VER-BLE\\YAB Observer.cydsn\000"
 1064      424C455C 
 1064      59414220 
 1064      4F627365 
 1064      72766572 
 1065              	.LASF28:
 1066 007c 55415254 		.ascii	"UART_SpiUartDisableIntRx\000"
 1066      5F537069 
 1066      55617274 
 1066      44697361 
 1066      626C6549 
 1067              	.LASF11:
 1068 0095 666C6F61 		.ascii	"float\000"
 1068      7400
 1069              	.LASF30:
 1070 009b 55415254 		.ascii	"UART_SpiUartDisableIntTx\000"
 1070      5F537069 
 1070      55617274 
 1070      44697361 
 1070      626C6549 
 1071              	.LASF19:
 1072 00b4 73697A65 		.ascii	"size\000"
 1072      00
 1073              	.LASF5:
 1074 00b9 6C6F6E67 		.ascii	"long unsigned int\000"
 1074      20756E73 
 1074      69676E65 
 1074      6420696E 
 1074      7400
 1075              	.LASF9:
 1076 00cb 75696E74 		.ascii	"uint8\000"
 1076      3800
 1077              	.LASF18:
 1078 00d1 72784461 		.ascii	"rxData\000"
 1078      746100
 1079              	.LASF23:
 1080 00d8 77724275 		.ascii	"wrBuf\000"
 1080      6600
 1081              	.LASF1:
 1082 00de 756E7369 		.ascii	"unsigned char\000"
 1082      676E6564 
 1082      20636861 
ARM GAS  C:\Users\YBOURA~1\AppData\Local\Temp\ccATHWVo.s 			page 29


 1082      7200
 1083              	.LASF12:
 1084 00ec 646F7562 		.ascii	"double\000"
 1084      6C6500
 1085              	.LASF32:
 1086 00f3 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1086      4320342E 
 1086      392E3320 
 1086      32303135 
 1086      30333033 
 1087 0126 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1087      20726576 
 1087      6973696F 
 1087      6E203232 
 1087      31323230 
 1088 0159 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1088      66756E63 
 1088      74696F6E 
 1088      2D736563 
 1088      74696F6E 
 1089              	.LASF10:
 1090 0181 75696E74 		.ascii	"uint32\000"
 1090      333200
 1091              	.LASF27:
 1092 0188 55415254 		.ascii	"UART_SpiUartClearTxBuffer\000"
 1092      5F537069 
 1092      55617274 
 1092      436C6561 
 1092      72547842 
 1093              	.LASF21:
 1094 01a2 55415254 		.ascii	"UART_SpiUartPutArray\000"
 1094      5F537069 
 1094      55617274 
 1094      50757441 
 1094      72726179 
 1095              	.LASF31:
 1096 01b7 696E7453 		.ascii	"intSourceMask\000"
 1096      6F757263 
 1096      654D6173 
 1096      6B00
 1097              	.LASF29:
 1098 01c5 696E7453 		.ascii	"intSource\000"
 1098      6F757263 
 1098      6500
 1099              	.LASF7:
 1100 01cf 6C6F6E67 		.ascii	"long long unsigned int\000"
 1100      206C6F6E 
 1100      6720756E 
 1100      7369676E 
 1100      65642069 
 1101              	.LASF15:
 1102 01e6 73697A65 		.ascii	"sizetype\000"
 1102      74797065 
 1102      00
 1103              	.LASF6:
 1104 01ef 6C6F6E67 		.ascii	"long long int\000"
 1104      206C6F6E 
ARM GAS  C:\Users\YBOURA~1\AppData\Local\Temp\ccATHWVo.s 			page 30


 1104      6720696E 
 1104      7400
 1105              	.LASF20:
 1106 01fd 55415254 		.ascii	"UART_SpiUartWriteTxData\000"
 1106      5F537069 
 1106      55617274 
 1106      57726974 
 1106      65547844 
 1107              	.LASF25:
 1108 0215 55415254 		.ascii	"UART_SpiUartGetTxBufferSize\000"
 1108      5F537069 
 1108      55617274 
 1108      47657454 
 1108      78427566 
 1109              	.LASF2:
 1110 0231 73686F72 		.ascii	"short int\000"
 1110      7420696E 
 1110      7400
 1111              	.LASF33:
 1112 023b 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\UART_SPI_UART.c\000"
 1112      6E657261 
 1112      7465645F 
 1112      536F7572 
 1112      63655C50 
 1113              	.LASF16:
 1114 0264 55415254 		.ascii	"UART_SpiUartReadRxData\000"
 1114      5F537069 
 1114      55617274 
 1114      52656164 
 1114      52784461 
 1115              	.LASF4:
 1116 027b 6C6F6E67 		.ascii	"long int\000"
 1116      20696E74 
 1116      00
 1117              	.LASF13:
 1118 0284 63686172 		.ascii	"char\000"
 1118      00
 1119              	.LASF26:
 1120 0289 55415254 		.ascii	"UART_SpiUartClearRxBuffer\000"
 1120      5F537069 
 1120      55617274 
 1120      436C6561 
 1120      72527842 
 1121              	.LASF0:
 1122 02a3 7369676E 		.ascii	"signed char\000"
 1122      65642063 
 1122      68617200 
 1123              	.LASF17:
 1124 02af 55415254 		.ascii	"UART_SpiUartGetRxBufferSize\000"
 1124      5F537069 
 1124      55617274 
 1124      47657452 
 1124      78427566 
 1125              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
